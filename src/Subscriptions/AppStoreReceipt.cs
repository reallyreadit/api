using System.Text.Json.Serialization;

namespace api.Subscriptions {
	/// <summary>The decoded version of the encoded receipt data sent with the request to the App Store.</summary>
	/// <remarks>https://developer.apple.com/documentation/appstorereceipts/responsebody/receipt</remarks>
	class AppStoreReceipt {
		/// <summary>See <c>app_item_id</c>.</summary>
		[JsonPropertyName("adam_id")]
		public long AdamId { get; set; }

		/// <summary>Generated by App Store Connect and used by the App Store to uniquely identify the app purchased. Apps are assigned this identifier only in production. Treat this value as a 64-bit long integer.</summary>
		[JsonPropertyName("app_item_id")]
		public long AppItemId { get; set; }

		/// <summary>The app’s version number. The app's version number corresponds to the value of <c>CFBundleVersion</c> (in iOS) or <c>CFBundleShortVersionString</c> (in macOS) in the <c>Info.plist</c>. In production, this value is the current version of the app on the device based on the <c>receipt_creation_date_ms</c>. In the sandbox, the value is always "<c>1.0</c>".</summary>
		[JsonPropertyName("application_version")]
		public string ApplicationVersion { get; set; }

		/// <summary>The bundle identifier for the app to which the receipt belongs. You provide this string on App Store Connect. This corresponds to the value of <c>CFBundleIdentifier</c> in the <c>Info.plist</c> file of the app.</summary>
		[JsonPropertyName("bundle_id")]
		public string BundleId { get; set; }

		/// <summary>A unique identifier for the app download transaction.</summary>
		[JsonPropertyName("download_id")]
		public long DownloadId { get; set; }

		/// <summary>The time the receipt expires for apps purchased through the Volume Purchase Program, in a date-time format similar to the ISO 8601.</summary>
		[JsonPropertyName("expiration_date")]
		public string ExpirationDate { get; set; }

		/// <summary>The time the receipt expires for apps purchased through the Volume Purchase Program, in UNIX epoch time format, in milliseconds. If this key is not present for apps purchased through the Volume Purchase Program, the receipt does not expire. Use this time format for processing dates.</summary>
		[JsonPropertyName("expiration_date_ms")]
		public string ExpirationDateMs { get; set; }

		/// <summary>The time the receipt expires for apps purchased through the Volume Purchase Program, in the Pacific Time zone.</summary>
		[JsonPropertyName("expiration_date_pst")]
		public string ExpirationDatePst { get; set; }

		/// <summary>An array that contains the in-app purchase receipt fields for all in-app purchase transactions.</summary>
		/// <remarks>
		/// <para>The <c>in_app</c> array is not in chronological order. When parsing the array, iterate over all items to ensure all items are fulfilled. For example, you cannot assume that the last item in the array is the most recent.</para>
		/// <para>For receipts containing auto-renewable subscriptions, check the value of the <see cref="AppStoreReceiptResponse.LatestReceiptInfo">responseBody.Latest_receipt_info</see> key of the response to get the status of the most recent renewal.</para>
		/// <para>You can use this array to:</para>
		/// <list type="bullet">
		/// <item>Check for an empty array in a valid receipt, indicating that the App Store has made no in-app purchase charges.</item>
		/// <item>Determine which products the user purchased. Purchases for non-consumable products, auto-renewable subscriptions, and non-renewing subscriptions remain in the receipt indefinitely. For consumable products, the transaction is added to the receipt when the purchase is made, and remains until your app finishes that transaction. It no longer appears in updated receipts after you call finishTransaction(_:).</item>
		/// </list>
		/// </remarks>
		[JsonPropertyName("in_app")]
		public AppStoreInAppPurchaseReceipt[] InApp { get; set; }

		/// <summary>The version of the app that the user originally purchased. This value does not change, and corresponds to the value of <c>CFBundleVersion</c> (in iOS) or <c>CFBundleShortVersionString</c> (in macOS) in the <c>Info.plist</c> file of the original purchase. In the sandbox environment, the value is always "<c>1.0</c>".</summary>
		[JsonPropertyName("original_application_version")]
		public string OriginalApplicationVersion { get; set; }

		/// <summary>The time of the original app purchase, in a date-time format similar to ISO 8601.</summary>
		[JsonPropertyName("original_purchase_date")]
		public string OriginalPurchaseDate { get; set; }

		/// <summary>The time of the original app purchase, in UNIX epoch time format, in milliseconds. Use this time format for processing dates.</summary>
		[JsonPropertyName("original_purchase_date_ms")]
		public string OriginalPurchaseDateMs { get; set; }

		/// <summary>The time of the original app purchase, in the Pacific Time zone</summary>
		[JsonPropertyName("original_purchase_date_pst")]
		public string OriginalPurchaseDatePst { get; set; }

		/// <summary>The time the user ordered the app available for pre-order, in a date-time format similar to ISO 8601.</summary>
		[JsonPropertyName("preorder_date")]
		public string PreorderDate { get; set; }

		/// <summary>The time the user ordered the app available for pre-order, in UNIX epoch time format, in milliseconds. This field is only present if the user pre-orders the app. Use this time format for processing dates.</summary>
		[JsonPropertyName("preorder_date_ms")]
		public string PreorderDateMs { get; set; }

		/// <summary>The time the user ordered the app available for pre-order, in the Pacific Time zone.</summary>
		[JsonPropertyName("preorder_date_pst")]
		public string PreorderDatePst { get; set; }

		/// <summary>The time the App Store generated the receipt, in a date-time format similar to ISO 8601.</summary>
		[JsonPropertyName("receipt_creation_date")]
		public string ReceiptCreationDate { get; set; }

		/// <summary>The time the App Store generated the receipt, in UNIX epoch time format, in milliseconds. Use this time format for processing dates. This value does not change.</summary>
		[JsonPropertyName("receipt_creation_date_ms")]
		public string ReceiptCreationDateMs { get; set; }

		/// <summary>The time the App Store generated the receipt, in the Pacific Time zone.</summary>
		[JsonPropertyName("receipt_creation_date_pst")]
		public string ReceiptCreationDatePst { get; set; }

		/// <summary>
		/// <para>The type of receipt generated. The value corresponds to the environment in which the app or VPP purchase was made.</para>
		/// <para>Possible values: <c>Production</c>, <c>ProductionVPP</c>, <c>ProductionSandbox</c>, <c>ProductionVPPSandbox</c></para>
		/// </summary>
		[JsonPropertyName("receipt_type")]
		public string ReceiptType { get; set; }

		/// <summary>The time the request to the <c>verifyReceipt</c> endpoint was processed and the response was generated, in a date-time format similar to ISO 8601.</summary>
		[JsonPropertyName("request_date")]
		public string RequestDate { get; set; }

		/// <summary>The time the request to the <c>verifyReceipt</c> endpoint was processed and the response was generated, in UNIX epoch time format, in milliseconds. Use this time format for processing dates.</summary>
		[JsonPropertyName("request_date_ms")]
		public string RequestDateMs { get; set; }

		/// <summary>The time the request to the verifyReceipt endpoint was processed and the response was generated, in the Pacific Time zone.</summary>
		[JsonPropertyName("request_date_pst")]
		public string RequestDatePst { get; set; }

		/// <summary>An arbitrary number that identifies a revision of your app. In the sandbox, this key's value is “<c>0</c>”.</summary>
		[JsonPropertyName("version_external_identifier")]
		public long VersionExternalIdentifier { get; set; }
	}
}